generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  email         String         @unique
  password      String?
  picture       String?
  bio           String?
  socialHandles SocialHandle[]
  createdAt     DateTime       @default(now())
  zens          Zen[]

  @@map("users")
}

model SocialHandle {
  id       String   @id @default(uuid())
  platform Platform
  handle   String
  user     User     @relation(fields: [userId], references: [id])
  userId   String

  @@unique([platform, handle, userId]) //* Prevent duplicate handles per platform per user
  @@map("social_handles")
}

enum Platform {
  TWITTER
  LINKEDIN
  GITHUB
}

model Zen {
  id    String @id @default(uuid())
  title String
  plan  String

  //* Timer-related fields
  startTime DateTime?
  endTime   DateTime?
  duration  Int?
  remaining Int?

  tasks     Task[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())

  @@index([userId])
  @@map("zens")
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())

  zen   Zen?    @relation(fields: [zenId], references: [id])
  zenId String?

  @@index([zenId])
  @@map("tasks")
}
