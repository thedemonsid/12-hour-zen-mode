// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  email         String   @unique
  password      String?
  picture       String?
  bio           String?
  socialHandles String[]
  createdAt     DateTime @default(now())
  Zen           Zen[]
}

model Zen {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  preZen      String? // todo: Markdown Formated pre zen plans
  postZen     String? // todo: Markdown Formated post zen feelings
  elapsedTime Int      @default(0) //* whenever a zen is created, the elapsedTime is set to 0 seconds, and it is updated every time the zen is paused
  tasks       Task[]
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  Zen         Zen?     @relation(fields: [zenId], references: [id])
  zenId       Int?
}
